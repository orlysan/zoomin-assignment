{"version":3,"sources":["Components/Header/Header.js","redux/contants/action-types.js","redux/actions/actions.js","Pages/Favorite/Favorite.js","Components/Toc/Toc.js","Components/ChosenFilm/ChosenFilm.js","Pages/Home/Home.js","App.js","reportWebVitals.js","redux/reducers/moviesReducer.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["Header","Navbar","className","Container","Brand","to","ActionTypes","getMoviesList","movies","type","payload","Favorite","favoriteList","useSelector","state","moviesReducer","favorites","dispatch","useDispatch","console","log","removeItem","currentMovie","createFavoriteCard","map","ListGroup","Item","claasName","Button","onClick","Toc","fetchFilmsList","a","axios","get","catch","err","handleShow","res","data","results","choseMovie","item","useEffect","mapList","movie","e","title","episode_id","useState","show","setShow","handleClose","variant","Modal","onHide","Body","ChosenFilm","favorite","selectedMovie","Card","Title","Text","opening_crawl","undefined","find","fav","push","addToFavorite","Home","selected","Row","Col","sm","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducers","combineReducers","filter","persistConfig","key","storage","persistedReducer","persistReducer","store","createStore","composeWithDevTools","persistedStore","persistStore","ReactDOM","render","StrictMode","persistor","document","getElementById"],"mappings":"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","file":"static/js/main.f23eeb6e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Navbar, Container } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Header.css\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <Navbar className=\"nav-header\">\r\n      <Container>\r\n        <Navbar.Brand>\r\n          <Link to=\"/\">Star War</Link>\r\n        </Navbar.Brand>\r\n        <Link to=\"/favorites\">Favorites</Link>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","\r\n    export const ActionTypes = {\r\n        GET_MOVIES_LIST: \"GET_MOVIES_LIST\",\r\n        ADD_TO_FAVORITE: \"ADD_TO_FAVORITE\",\r\n        SELECTED_MOVIE: \"SELECTED_MOVIE\",\r\n        REMOVE_FROM_FAVORITE: \"REMOVE_FROM_FAVORITE\"\r\n    }\r\n  \r\n\r\n","import { ActionTypes } from \"../contants/action-types\";\r\n\r\nexport const getMoviesList = movies => {\r\n  return {\r\n    type: ActionTypes.GET_MOVIES_LIST,\r\n    payload: movies\r\n  };\r\n};\r\n\r\nexport const addToFavorite = favorite => {\r\n  return {\r\n    type: ActionTypes.ADD_TO_FAVORITE,\r\n    payload: favorite\r\n  };\r\n};\r\n\r\nexport const setFavoriteMovie = selected => {\r\n  return {\r\n    type: ActionTypes.SELECTED_MOVIE,\r\n    payload: selected\r\n  };\r\n};\r\n\r\nexport const removeFromFavorite = removeFav => {\r\n  return {\r\n    type: ActionTypes.REMOVE_FROM_FAVORITE,\r\n    payload: removeFav\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { Container, ListGroup } from \"react-bootstrap\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { removeFromFavorite } from \"../../redux/actions/actions\";\r\nimport \"./Favorite.css\";\r\n\r\nfunction Favorite() {\r\n  const favoriteList = useSelector(state => state.moviesReducer.favorites);\r\n  const dispatch = useDispatch();\r\n  console.log(favoriteList);\r\n\r\n  const removeItem = currentMovie => {\r\n    dispatch(removeFromFavorite(currentMovie));\r\n  };\r\n\r\n  const createFavoriteCard = favoriteList.map(currentMovie => {\r\n    return (\r\n      <ListGroup.Item claasName=\"favorite-list\">\r\n        {currentMovie}\r\n        <span>\r\n          <Button onClick={() => removeItem(currentMovie)}>\r\n            Remove from favorites\r\n          </Button>\r\n        </span>\r\n      </ListGroup.Item>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Container className=\"favorite-container\">\r\n      <h2 className=\"list-title\">My favorite movies</h2>\r\n      <ListGroup>\r\n        {createFavoriteCard}\r\n      </ListGroup>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Favorite;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getMoviesList, setFavoriteMovie } from \"../../redux/actions/actions\";\r\nimport axios from \"axios\";\r\nimport { ListGroup, Modal } from \"react-bootstrap\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"./Toc.css\";\r\n\r\nfunction Toc() {\r\n  const movies = useSelector(state => state.moviesReducer.movies);\r\n  const dispatch = useDispatch();\r\n\r\n  const fetchFilmsList = async () => {\r\n    const res = await axios.get(\"https://swapi.dev/api/films\").catch(err => {\r\n      handleShow(err);\r\n    });\r\n    dispatch(getMoviesList(res.data.results));\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchFilmsList();\r\n  }, []);\r\n\r\n  function choseMovie(item) {\r\n    dispatch(setFavoriteMovie(item));\r\n  }\r\n\r\n  const mapList = movies.map(movie => {\r\n    return (\r\n      <ListGroup.Item\r\n        key={movie.episode_id}\r\n        onClick={e => choseMovie(movie, e)}\r\n      >\r\n        {movie.title}\r\n      </ListGroup.Item>\r\n    );\r\n  });\r\n\r\n  //modeal error function\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  return (\r\n    <ListGroup variant=\"flush\">\r\n      {mapList}\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Body>Somethig wrong with the link... </Modal.Body>\r\n        <Button variant=\"secondary\" onClick={handleClose}>\r\n          Close\r\n        </Button>\r\n      </Modal>\r\n    </ListGroup>\r\n  );\r\n}\r\n\r\nexport default Toc;\r\n","import Button from \"react-bootstrap/Button\";\r\nimport React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addToFavorite } from \"../../redux/actions/actions\";\r\nimport \"./ChosenFilm.css\";\r\n\r\nfunction ChosenFilm() {\r\n  const favorite = useSelector(state => state.moviesReducer.selectedMovie);\r\n  const favoriteList = useSelector(state => state.moviesReducer.favorites);\r\n  const dispatch = useDispatch();\r\n\r\n  const addMovieToFavorite = () => {\r\n    const findFavorite = favoriteList.find(fav => fav === favorite.title);\r\n    if (findFavorite == undefined) {\r\n      favoriteList.push(favorite.title);\r\n      dispatch(addToFavorite(favoriteList));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card className=\"chosen-film-card\">\r\n      <Card.Body>\r\n        <Card.Title>\r\n          {favorite.title}\r\n        </Card.Title>\r\n        <Card.Text>\r\n          {favorite.opening_crawl}\r\n        </Card.Text>\r\n        <Button onClick={addMovieToFavorite}>Add to favorite</Button>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default ChosenFilm;\r\n","import React from \"react\";\r\nimport Toc from \"../../Components/Toc/Toc\";\r\nimport ChosenFilm from \"../../Components/ChosenFilm/ChosenFilm\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport \"./Home.css\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction Home() {\r\n  const selected = useSelector(state => state.moviesReducer.selectedMovie);\r\n\r\n  return (\r\n    <Container className=\"home-page\">\r\n      <h1 className=\"home-page-title\">The Star War API</h1>\r\n\r\n      <Row>\r\n        <Col sm={4}>\r\n          <Toc />\r\n        </Col>\r\n        <Col sm={8}>\r\n          {selected !== [] ? <ChosenFilm /> : \"\"}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\nimport React from \"react\";\r\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\r\nimport Header from \"./Components/Header/Header\";\r\nimport Favorite from \"./Pages/Favorite/Favorite\";\r\nimport Home from \"./Pages/Home/Home\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <BrowserRouter>\r\n        <Header />\r\n        <Routes>\r\n          <Route path=\"/\" element={<Home />} />\r\n          <Route path=\"/favorites\" element={<Favorite />} />\r\n        </Routes>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ActionTypes } from \"../contants/action-types\";\r\n\r\nconst initialState = {\r\n  movies: [],\r\n  favorites: [],\r\n  selectedMovie: []\r\n};\r\n\r\nexport const moviesReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case ActionTypes.GET_MOVIES_LIST:\r\n      return { ...state, movies: payload };\r\n    case ActionTypes.SELECTED_MOVIE:\r\n      return { ...state, selectedMovie: payload };\r\n    case ActionTypes.ADD_TO_FAVORITE:\r\n      return { ...state, favorites: payload };\r\n    case ActionTypes.REMOVE_FROM_FAVORITE: {\r\n      return {\r\n        ...state,\r\n        favorites: state.favorites.filter(item => item !== payload)\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { moviesReducer } from \"./moviesReducer\";\r\n\r\n const reducers = combineReducers({\r\n    moviesReducer: moviesReducer,\r\n})\r\n\r\nexport default reducers;\r\n","import { createStore } from \"redux\";\r\nimport reducers from \"./reducers/index\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, reducers);\r\n\r\nexport const store = createStore(persistedReducer, {}, composeWithDevTools());\r\n\r\nexport const persistedStore = persistStore(store);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport reportWebVitals from './reportWebVitals';\nimport { store , persistedStore} from './redux/store'\nimport { PersistGate } from 'redux-persist/integration/react'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate persistor={persistedStore}>\n      <App />\n      </PersistGate>\n    </Provider>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}